on: 
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

name: Show cards in Github issues

jobs:
  extract-image:
    name: Extract image
    runs-on: ubuntu-latest
    steps:
     - name: Find images to create
       id: find
       uses: actions/github-script@v6
       with:
         result-encoding: string
         script: |
           console.log(context.payload.comment.body);
           const matched = /\/show (.*)/.exec(context.payload.comment.body);
           if (matched) {
             console.log("matched", matched[1]);
             return matched[1];
           }
           else
             return "no"
     - uses: actions/github-script@v6
       if: "steps.find.outputs.result != 'no'"
       id: sha
       name: Find correct SHA
       with:
         result-encoding: string
         script: |
           if (context.payload.issue.pull_request) {
             const pr = (await github.request("GET /repos/{owner}/{repo}/pulls/{pull_number}", {
               owner: context.repo.owner,
               repo: context.repo.repo,
               pull_number: context.issue.number,
             })).data;
             return pr.head.sha;
           } else {
             return context.sha;
           }
     - uses: cachix/install-nix-action@v22
       if: "steps.find.outputs.result != 'no'"
       with:
         extra_nix_config: "log-lines = 300"
     - uses: cachix/cachix-action@v12
       if: "steps.find.outputs.result != 'no'"
       with:
         name: potsdam-pnp
         authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
     - name: Fetch or compile cards.pdf
       if: "steps.find.outputs.result != 'no'"
       run: nix build --no-update-lock-file github:${{ github.repository }}/${{ steps.sha.outputs.result }}
     - uses: potsdam-pnp/show-cards@main
       if: "steps.find.outputs.result != 'no'"
       with:
         app-id: ${{ secrets.SHOWCARDSAPPID }}
         app-private-key: ${{ secrets.SHOWCARDSPRIVATEKEY }}
         sha: ${{ steps.sha.outputs.result }}
         content-path: ./result
     - name: Comment when some failures happen
       if: failure()
       uses: actions/github-script@v6
       with:
         script: |
          console.log(JSON.stringify(context, null, 2))
          await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
             owner: context.repo.owner,
             repo: context.repo.repo,
             issue_number: context.issue.number,
             body: 'There was some issue fetching card images. [Details](https://github.com/' + 
             context.repo.owner + '/' + context.repo.repo + '/actions/runs/' + context.runId + ')'
           });
